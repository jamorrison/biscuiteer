% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read.biscuit.R, R/tmp.read.biscuit.R
\name{read.biscuit}
\alias{read.biscuit}
\alias{load.biscuit}
\title{a bsseq loader for Biscuit output (BED-like format, 2 or 3 cols/sample)}
\usage{
read.biscuit(BEDfile, VCFfile, merged, sampleNames = NULL,
  simplify = FALSE, genome = "hg19", how = c("data.table", "readr"),
  hdf5 = FALSE, hdf5dir = NULL, sparse = FALSE, chunkSize = 1e+06,
  chr = NULL, which = NULL, verbose = FALSE)

read.biscuit(BEDfile, VCFfile, merged, sampleNames = NULL,
  simplify = FALSE, genome = "hg19", how = c("data.table", "readr"),
  hdf5 = FALSE, hdf5dir = NULL, sparse = FALSE, chunkSize = 1e+06,
  chr = NULL, which = NULL, verbose = FALSE)
}
\arguments{
\item{BEDfile}{the file (compressed or not, doesn't matter) to load}

\item{VCFfile}{the file (compressed and tabixed, with header) to load}

\item{merged}{are CpG sites merged?}

\item{sampleNames}{if NULL, create; if VCF, read; if data.frame, make pData}

\item{simplify}{simplify sample names by dropping .foo.bar.hg19 or similar}

\item{genome}{what genome assembly were the runs aligned against? (hg19)}

\item{how}{how to load the data? "data.table" (default) or "readr"}

\item{hdf5}{make the object HDF5-backed? (FALSE; use in-core storage)}

\item{hdf5dir}{if hdf5 is TRUE, where should HDF5 files be stored? (NULL)}

\item{sparse}{are there a lot of zero-coverage sites? (default is FALSE)}

\item{chunkSize}{number of rows before readr reading becomes chunked (1e6)}

\item{chr}{load a specific chromosome (to rbind() later)? (NULL)}

\item{which}{a GRanges of regions to load (default NULL, load them all)}

\item{verbose}{be verbose? (FALSE)}

\item{clumpSize}{number of rows before readr reading becomes clumped (1e6)}

\item{BEDfile}{the file (compressed or not, doesn't matter) to load}

\item{VCFfile}{the file (compressed and tabixed, with header) to load}

\item{merged}{are CpG sites merged?}

\item{sampleNames}{if NULL, create; if VCF, read; if data.frame, make pData}

\item{simplify}{simplify sample names by dropping .foo.bar.hg19 or similar}

\item{genome}{what genome assembly were the runs aligned against? (hg19)}

\item{how}{how to load the data? "data.table" (default) or "readr"}

\item{hdf5}{make the object HDF5-backed? (FALSE; use in-core storage)}

\item{hdf5dir}{if hdf5 is TRUE, where should HDF5 files be stored? (NULL)}

\item{sparse}{are there a lot of zero-coverage sites? (default is FALSE)}

\item{chr}{load a specific chromosome (to rbind() later)? (NULL)}

\item{which}{a GRanges of regions to load (default NULL, load them all)}

\item{verbose}{be verbose? (FALSE)}
}
\value{
\preformatted{       a bsseq::BSseq object, possibly Matrix- or HDF5-backed
}

\preformatted{       a bsseq::BSseq object, possibly Matrix- or HDF5-backed
}
}
\description{
e.g. P01-028-T06.joint.ch.hg19.bed.gz has 3 samples, and 9 columns total,
while P01-028-T06.joint.cg.merged.hg19.bed.gz has 3 samples and 12 columns.
Note: the defaults assume alignment against hg19 (use genome=xyz to override)
Note 2: if a BED has no header, a VCF header can be used to autodetect names.

e.g. P01-028-T06.joint.ch.hg19.bed.gz has 3 samples, and 9 columns total,
while P01-028-T06.joint.cg.merged.hg19.bed.gz has 3 samples and 12 columns.
Note: the defaults assume alignment against hg19 (use genome=xyz to override)
Note 2: if a BED has no header, a VCF header can be used to autodetect names.
}
\seealso{
BSseq

checkBiscuitBED

BSseq

checkBiscuitBED
}
